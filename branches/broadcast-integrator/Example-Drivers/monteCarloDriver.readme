$Revision: 1.5 $, $Date: 2008/11/24 21:20:03 $
$Name: Cornish-Gilliflower $

*** What the program does

This program is a general-purpose driver for the I3RC Community Monte Carlo
model. It computes pixel-by-pixel outgoing fluxes at the top and bottom of the
domain, absorption (flux divergence, actually) within the domain, and
(optionally) intensity at the top or bottom of the domain in user-specified
directions. It is restricted to monochromatic solar (no internal sources)
radiative transfer.

Four types of results can be output: 
   Pixel level and domain average fluxes
   Pixel level radiances for the specified directions
   Domain average absorption profiles
   Voxel level flux divergence ("heating rates") 
Netcdf output can be requested; that file contains all of the results. 
Each output has the mean value and standard deviation of the mean
over numBatches of photon batches (to estimate the Monte Carlo noise).

Assumptions: 
  Monochromatic solar radiative transfer.
  Lambertian surface reflection.
  Periodic horizontal boundary conditions.
  Uniform optical properties in each grid cell.

*** How to control the program 

The program reads a single namelist file; the name of this file
can be specified either by reading from the command line or by reading
from standard in, according to the getOneArgument() procedure in
userInterface_Unix.f95.

An example set of namelists is provided in monteCarloDriver.nml. Three of the 
namelists (radiativeTransfer, monteCarlo, and algorithms) are the same as those
used by the program planeParallel. 

*** Details

This vast majority of time spent by this program is in calls to 
the computeRadiativeTransfer() procedure in the I3RC module 
monteCarloRadiativeTransfer. 

If results for a single domain are to be combined across independent runs 
(to speed up expensive calculation by running on more than one processor, 
for example) each run must have a unique value of the namelist variable 
iseed. The included MPI version of the program does takes care of this. 

Computing intensity (as opposed to fluxes) adds considerable expense to any 
Monte Carlo calculation. The added expense depends on the number of directions 
and how close they are to zenith or nadir. 